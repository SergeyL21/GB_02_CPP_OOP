/*
 * Created by Qt Creator 4.11.0 @ 07 Mar 2021 16:24:09
 *
 * Project: GB_CppOOP
 * File: main.cpp
 *
 * Author: Sergey Lola
 */

#include <iostream>

#include "power.h"
#include "rgba.h"
#include "stack.h"

// ---------------------------------------------------------------------------
// вспомогательный макрос для удаления предупреждения об неиспользуемой
// переменной
#undef UNUSED
#define UNUSED(X) (void)(X);

using namespace std;

// --------------------------------------------------------------------------------------
int main(int argc, const char ** argv) {
  UNUSED(argc)
  UNUSED(argv)

  // ------------------------------------------------------------------------------------
  // ЗАДАНИЕ 1: Создать класс Power, который содержит два вещественных числа. Этот класс
  // должен иметь две переменные-члена для хранения этих вещественных чисел. Еще создать
  // два метода: один с именем set, который позволит присваивать значения переменным,
  // второй - calculate, который будет выводить результат возведения первого числа в
  // степень второго. Задать значения этих двух чисел по умолчанию.
  {
    cout << " --- TASK 1 --- " << endl;
    Power power;
    power.set(2., 2.);
    cout << "The result of power: " << power.calculate() << endl;
  }
  // ------------------------------------------------------------------------------------
  // ЗАДАНИЕ 2: Написать класс с именем RGBA, который содержит 4 переменные-члена типа
  // std::uint8_t: m_red, m_green, m_blue и m_alpha (#include <cstdint> для доступа к
  // этому типу). Задать 0 в качестве значения по умолчанию для m_red, m_green, m_blue и
  // 255 для m_alpha. Создать конструктор со списком инициализации членов, который
  // позволит пользователю передавать значения для m_red, m_blue, m_green и m_alpha.
  // Написать функцию print(), которая будет выводить значения переменных-членов.
  {
    cout << endl << " --- TASK 2 --- " << endl;
    RGBA rgba{0, 127, 255};
    auto x = rgba.print();
    cout << "RGBA output: " << rgba.print().c_str() << endl;
  }
  // ------------------------------------------------------------------------------------
  // ЗАДАНИЕ 3: Написать класс, который реализует функциональность стека. Класс Stack
  // должен иметь:
  // - private-массив целых чисел длиной 10;
  // - private целочисленное значение для отслеживания длины стека;
  // - public-метод с именем reset(), который будет сбрасывать длину и все значения
  // элементов на 0;
  // - public-метод с именем push(), который будет добавлять значение в стек. push()
  // должен возвращать значение false, если массив уже заполнен, и true в противном случае;
  // - public-метод с именем pop() для вытягивания и возврата значения из стека. Если в
  // стеке нет значений, то должно выводиться предупреждение;
  // public-метод с именем print(), который будет выводить все значения стека.
  {
    cout << endl << " --- TASK 3 --- " << endl;
    Stack stack;
    stack.reset();
    stack.print();

    stack.push(3);
    stack.push(7);
    stack.push(5);

    stack.print();

    stack.pop();
    stack.print();

    stack.pop();
    stack.pop();
    stack.print();
  }

  return 0;
}
